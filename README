# -------------------------------------------------------------------------- #
#
#                    Single and Two-Phase flow Simulator
#  
#  Method: Finite Element.
#  Elements: 5 nodes mini-element and 10 nodes quadratic element
#  Discretization: Galerkin for all terms except of the convection term 
#                  which is Semi-Lagrangian.
#  Lin Sys Solution: in-house solvers and PETSc library
#  Meshing: TetGen by Hang Si
#
#  authors: Gustavo R. ANJOS              gustavo.rabello@gmail.com
#           Norberto MANGIAVACCHI         norberto@uerj.br
#           Jose PONTES                   jopontes@metalmat.ufrj.br
#           John R. THOME                 john.thome@epfl.ch
#
# -------------------------------------------------------------------------- #


COMPILATION INSTRUCTIONS:

# download and install Petsc (http://www.mcs.anl.gov/petsc)
./config/configure.py --with-cc=gcc --with-fc=gfortran --with-cxx=g++
--download-f-blas-lapack=1 --download-mpich=1 --with-clanguage=cxx
--download-parmetis=1 --download-blacs=1 --download-scalapack=1
--download-mumps=1; make all test
export PETSC_ARCH=darwin9.4.0-c-debug (Mac OS X)
export PETSC_ARCH=linux-gnu-cxx-debug (Linux)
export PETSC_DIR=$HOME/Programs/petsc/petsc-dev

# download and install TetGen (http://tetgen.berlios.de)
uncomment #define TETLIBRARY in tetgen.h 
make tetlib
export TETGEN_DIR=$HOME/Programs/tetgen/1.4.3

---------- OPTIONAL INSTALL ------------
# download and install Boost (http://www.boost.org)
check if python-dev package is installed
./bootstrap.sh --prefix=$HOME/Programs/boost/1.47.0/;./bjam install
export BOOST_DIR=$HOME/Programs/boost/1.47.0
export DYLD_LIBRARY_PATH=${BOOST_DIR}/lib:DYLD_LIBRARY_PATH (Mac OS X)
export LD_LIBRARY_PATH=${BOOST_DIR}/lib:LD_LIBRARY_PATH (Linux)

# download and install Triangle (http://www.cs.cmu.edu/~quake/triangle.html)
make tetlibrary
export TRIANGLE_DIR=$HOME/Programs/triangle

# download and install Petsc4py (http://code.google.com/p/petsc4py)
python setup.py install --home=$HOME/Programs/python/
-------- END OPTIONAL INSTALL ----------

# proposed directory layout
$HOME/projects/cpp/femSIM3d
$HOME/projects/cpp/lib
$HOME/Programs/petsc/petsc-dev
$HOME/Programs/tetgen/1.4.3
$HOME/Programs/boost/1.47.0
$HOME/Programs/triangle

MESHING

# download and install GMsh (http://geuz.org/gmsh/)
-- install depending on your O.S. --

# mesh examples:
http://gustavo.rabello.org/mesh/3d

VISUALIZATION REQUIREMENTS

# download and install Paraview (http://www.paraview.org/)
-- install depending on your O.S. --


STRANGE BEHAVIOR:

# *********** SIMULATOR3D.CPP || UNCOUPLED ************* #

BUBBLE MODE:

 - static test
	fint = GTilde*heaviside -> not working p=0
  	fint = G*heaviside -> pressure is wrong
 - oscillating
    fint = GTilde*heaviside -> does not work
    fint = G*heaviside -> does not work
 - rising ( Mrho*g )
    fint = GTilde*heaviside -> work with overshooting and bubble deform
    fint = G*heaviside -> work with no overshooting --BEST--
         ( Mrho-M )*g
    fint = GTilde*heaviside -> overshooting, bubble deform and osc velocity
    fint = G*heaviside -> no overshooting, bubble ok and osc velocity

CALL: uv = uTilde + dt*invMLumped*fint + dt*invMrhoLumped*gravity;


DROPLET MODE:
 - static test
    fint = GTilde*heaviside -> not working p=0
	fint = G*heaviside -> pressure correct
 - oscillating test
    fint = GTilde*heaviside -> don't work
 	fint = G*heaviside -> work (not so good at the end), vel osc --BEST--
 - rising test: gravity = ( Mrho*g )
    fint = GTilde*heaviside -> overshooting, bubble deform
    fint = G*heaviside -> vel osc,
 - rising test: gravity = ( Mrho-M )*g
    fint = GTilde*heaviside -> osc velo, bubble deform, overshooting
    fint = G*heaviside -> osc velo, no overshooting, bubble ok

CALL uv = uTilde + invA*fint + invA*gravity;

# ****************************************************** #
